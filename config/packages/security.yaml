security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_db_provider:
            entity:
                class: App\Entity\User
                # the property to query by - e.g. username, email, etc
                property: username
                # if you're using multiple entity managers
                # manager_name: customer

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_OPERATOR, ROLE_ADMIN]
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path:   app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/remind_password$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/application, roles: [ROLE_USER, ROLE_OPERATOR, ROLE_ADMIN, ROLE_MANAGER] }
        - { path: ^/status, roles: ROLE_ADMIN }
        - { path: ^/check, roles: ROLE_ADMIN }
        - { path: ^/application_type, roles: ROLE_ADMIN }
        - { path: ^/source, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_ADMIN }
        - { path: ^/trigger, roles: ROLE_ADMIN }
        - { path: ^/email_template, roles: ROLE_ADMIN }
        - { path: ^/dashboard, roles: [ROLE_ADMIN, ROLE_OPERATOR] }
        - { path: ^/help, roles: [ROLE_USER, ROLE_OPERATOR, ROLE_ADMIN, ROLE_MANAGER] }
#        - { path: ^/category/new, roles: [ROLE_ADMIN] }
#        - { path: ^/category/edit, roles: [ROLE_ADMIN] }
#        - { path: ^/category/delete, roles: [ROLE_ADMIN] }
#        - { path: ^/product/new, roles: [ROLE_ADMIN] }
#        - { path: ^/product/edit, roles: [ROLE_ADMIN] }
#        - { path: ^/product/delete, roles: [ROLE_ADMIN] }
#        - { path: ^/property/new, roles: [ROLE_ADMIN] }
#        - { path: ^/property/edit, roles: [ROLE_ADMIN] }
#        - { path: ^/property/delete, roles: [ROLE_ADMIN] } 
        
    encoders:
        App\Entity\User:
            algorithm: bcrypt
